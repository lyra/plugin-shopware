/*! For license information please see lyranetwork-lyra.js.LICENSE.txt */
!function(e){var n={};function t(a){if(n[a])return n[a].exports;var i=n[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(a,i,function(n){return e[n]}.bind(null,i));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/bundles/lyranetworklyra/",t(t.s="VVq4")}({"+WiG":function(e,n,t){var a=t("ChS3");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("975c4960",a,!0,{})},"0nJl":function(e,n,t){var a=t("13bj");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("ec8b774a",a,!0,{})},"13bj":function(e,n,t){},"1oRH":function(e){e.exports=JSON.parse('{"lyraTitle":"Lyra Collect","lyraGeneral":{"mainMenuItemGeneral":"Lyra Collect","descriptionTextModule":"Lyra Collect settings","menuEntry":"Configuration"},"lyraPaymentInformation":"Payment information","lyraTransactionId":"Transaction ID","lyraTransactionUuid":"Transaction UUID","lyraTransactionType":"Transaction type","lyraMeansOfPayment":"Means of payment","lyraCardNumber":"Card number","lyraCardExpirationDate":"Expiration date","lyraLanguages":{"fr":"French","de":"German","en":"English","es":"Spanish","zh":"Chinese","it":"Italian","ja":"Japanese","pt":"Portuguese","nl":"Dutch","sv":"Swedish","ru":"Russian","pl":"Polisch","tr":"Turkisch"},"lyraDoc":"Documentation","save":"Save","cancel":"Cancel","titleSaveSuccess":"Success","messageSaveSuccess":"Configuration saved successfully","titleSaveError":"Error","lyraDescription":"This plugin enables you to setup the Lyra Collect payment system on your Shopware website.","lyraDocumentationDescription":"Click to view the module configuration documentation:","lyraCtxMode":"Mode","lyraCtxModeHelptext":"The context mode of this module.","lyraSignAlgo":"Signature algorithm","lyraSignAlgoHelptext":"Algorithm used to compute the payment form signature. Selected algorithm must be the same as one configured in the Lyra Collect Back Office.","lyraSignAlgo1Helptext":"Algorithm used to compute the payment form signature. Selected algorithm must be the same as one configured in the Lyra Collect Back Office. The HMAC-SHA-256 algorithm should not be activated if it is not yet available in the Lyra Collect Back Office, the feature will be available soon.","lyraLanguage":"Default language","lyraLanguageHelptext":"Default language on the payment page.","lyraAvailableLanguages":"Available languages","lyraAvailableLanguagesHelptext":"Languages available on the payment page. If you do not select any, all the supported languages will be available.","lyraValidationMode":"Validation mode","lyraValidationModeHelptext":"If manual is selected, you will have to confirm payments manually in your Lyra Collect Back Office.","lyraPaymentCards":"Card Types","lyraPaymentCardsHelptext":"The card type(s) that can be used for the payment. Select none to use gateway configuration.","lyraReturnMode":"Return mode","lyraReturnModeHelptext":"Method that will be used for transmitting the payment result from the payment page to your shop.","lyraPaymentStatusOnSuccess":"Order payment status","lyraPaymentStatusOnSuccessHelptext":"Defines the payment status of orders paid with this payment mode.","lyraOrderPlacedFlowEnabled":"Order placed flow","lyraOrderPlacedFlowEnabledHelptext":"If enabled, the « Order placed » flow will be set to active. Warning: Disabling this option will disable all actions defined in the « Order placed » flow. The flow will be disabled for all other plugins and applications."}')},"42GI":function(e,n,t){},"8HQ4":function(e,n,t){},AlIh:function(e){e.exports=JSON.parse('{"lyraTitle":"Lyra Collect","lyraGeneral":{"mainMenuItemGeneral":"Lyra Collect","descriptionTextModule":"Lyra Collect einstellungen","menuEntry":"Konfiguration"},"lyraPaymentInformation":"Zahlungsinformationen","lyraTransactionId":"Transaktionsnummer","lyraTransactionUuid":"Transaktions-UUID","lyraTransactionType":"Art der Transaktion","lyraMeansOfPayment":"Zahlungsmittel","lyraCardNumber":"Kreditkartennummer","lyraCardExpirationDate":"Verfallsdatum","lyraLanguages":{"fr":"Französisch","de":"Deutsch","en":"Englisch","es":"Spanisch","zh":"Chinesisch","it":"Italienisch","ja":"Japanisch","pt":"Portugiesisch","nl":"Holländisch","sv":"Schwedisch","ru":"Russisch","pl":"Polnisch","tr":"Türkisch"},"lyraDoc":"Dokumentation","save":"Speichern","cancel":"Absagen","titleSaveSuccess":"Erfolg","messageSaveSuccess":"Konfiguration erfolgreich gespeichert","titleSaveError":"Fehler","lyraDescription":"Mit diesem Plugin können Sie das Zahlungssystem Lyra Collect auf Ihrer Shopware-Website einrichten.","lyraDocumentationDescription":"Klicken Sie, um die Modul-Konfigurationsdokumentation zu finden:","lyraCtxMode":"Modus","lyraCtxModeHelptext":"Kontextmodus dieses Moduls.","lyraSignAlgo":"Signaturalgorithmus","lyraSignAlgoHelptext":"Algorithmus zur Berechnung der Zahlungsformsignatur. Der ausgewählte Algorithmus muss derselbe sein, wie er im Lyra Collect Back Office.","lyraSignAlgo1Helptext":"Algorithmus zur Berechnung der Zahlungsformsignatur. Der ausgewählte Algorithmus muss derselbe sein, wie er im Lyra Collect Back Office. Der HMAC-SHA-256-Algorithmus sollte nicht aktiviert werden, wenn er noch nicht im Lyra Collect Back Office verfügbar ist. Die Funktion wird in Kürze verfügbar sein.","lyraLanguage":"Standardsprache","lyraLanguageHelptext":"Standardsprache auf Zahlungsseite.","lyraAvailableLanguages":"Verfügbare Sprachen","lyraAvailableLanguagesHelptext":"Verfügbare Sprachen der Zahlungsseite. Nichts auswählen, um die Einstellung der Zahlungsplattform zu benutzen.","lyraValidationMode":"Bestätigungsmodus","lyraValidationModeHelptext":"Bei manueller Eingabe müssen Sie Zahlungen manuell in Ihr Lyra Collect Back Office bestätigen.","lyraPaymentCards":"Kartentypen","lyraPaymentCardsHelptext":"Wählen Sie die zur Zahlung verfügbaren Kartentypen aus. Nichts auswählen, um die Einstellungen der Plattform zu verwenden.","lyraReturnMode":"Übermittlungs-Modus","lyraReturnModeHelptext":"Methode, die zur Übermittlung des Zahlungsergebnisses von der Zahlungsschnittstelle an Ihren Shop verwendet wird.","lyraPaymentStatusOnSuccess":"Zahlungsstatus der Bestellung","lyraPaymentStatusOnSuccessHelptext":"Der Zahlungsstatus der bezahlten Bestellungen durch dieses Beszahlungsmittel definieren.","lyraOrderPlacedFlowEnabled":"Order placed flow","lyraOrderPlacedFlowEnabledHelptext":"If enabled, the « Order placed » flow will be set to active. Warning: Disabling this option will disable all actions defined in the « Order placed » flow. The flow will be disabled for all other plugins and applications."}')},ChS3:function(e,n,t){},HlN1:function(e,n){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function i(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function o(e,n){return(o=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function r(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=l(e);if(n){var i=l(this).constructor;t=Reflect.construct(a,arguments,i)}else t=a.apply(this,arguments);return s(this,t)}}function s(e,n){if(n&&("object"===t(n)||"function"==typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c=Shopware.Application,d=Shopware.Classes.ApiService,p=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&o(e,n)}(c,e);var n,t,s,l=r(c);function c(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"lyra";return a(this,c),l.call(this,e,n,t)}return n=c,(t=[{key:"getFeatures",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/get-features"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"getCardTypes",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/get-card-types"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"getLanguages",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/get-languages"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"getDocFiles",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/get-doc-files"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"getPaymentStatuses",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/get-payment-statuses"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"setOrderPlacedFlow",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/set-order-placed-flow"),e,{headers:n}).then((function(e){return d.handleResponse(e)}))}},{key:"isFlow",value:function(e){var n=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/is-flow"),{params:e,headers:n}).then((function(e){return d.handleResponse(e)}))}}])&&i(n.prototype,t),s&&i(n,s),Object.defineProperty(n,"prototype",{writable:!1}),c}(d);c.addServiceProvider("LyranetworkLyraSettingsService",(function(e){var n=c.getContainer("init");return new p(n.httpClient,e.loginService)}))},P6Sy:function(e,n){Shopware.Component.override("sw-extension-card-base",{created:function(){"LyranetworkLyra"===this.extension.name&&(this.extension.configurable=!1)}})},SZ7m:function(e,n,t){"use strict";function a(e,n){for(var t=[],a={},i=0;i<n.length;i++){var o=n[i],r=o[0],s={id:e+":"+i,css:o[1],media:o[2],sourceMap:o[3]};a[r]?a[r].parts.push(s):t.push(a[r]={id:r,parts:[s]})}return t}t.r(n),t.d(n,"default",(function(){return m}));var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},r=i&&(document.head||document.getElementsByTagName("head")[0]),s=null,l=0,c=!1,d=function(){},p=null,u="data-vue-ssr-id",y="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,n,t,i){c=t,p=i||{};var r=a(e,n);return f(r),function(n){for(var t=[],i=0;i<r.length;i++){var s=r[i];(l=o[s.id]).refs--,t.push(l)}n?f(r=a(e,n)):r=[];for(i=0;i<t.length;i++){var l;if(0===(l=t[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete o[l.id]}}}}function f(e){for(var n=0;n<e.length;n++){var t=e[n],a=o[t.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](t.parts[i]);for(;i<t.parts.length;i++)a.parts.push(h(t.parts[i]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{var r=[];for(i=0;i<t.parts.length;i++)r.push(h(t.parts[i]));o[t.id]={id:t.id,refs:1,parts:r}}}}function g(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function h(e){var n,t,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(c)return d;a.parentNode.removeChild(a)}if(y){var i=l++;a=s||(s=g()),n=b.bind(null,a,i,!1),t=b.bind(null,a,i,!0)}else a=g(),n=w.bind(null,a),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;n(e=a)}else t()}}var z,v=(z=[],function(e,n){return z[e]=n,z.filter(Boolean).join("\n")});function b(e,n,t,a){var i=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=v(n,i);else{var o=document.createTextNode(i),r=e.childNodes;r[n]&&e.removeChild(r[n]),r.length?e.insertBefore(o,r[n]):e.appendChild(o)}}function w(e,n){var t=n.css,a=n.media,i=n.sourceMap;if(a&&e.setAttribute("media",a),p.ssrId&&e.setAttribute(u,n.id),i&&(t+="\n/*# sourceURL="+i.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},TD2K:function(e,n,t){var a=t("42GI");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("52eecb48",a,!0,{})},VVq4:function(e,n,t){"use strict";t.r(n);t("nRpd");Shopware.Component.register("lyranetwork-lyra-icon",{template:'\n\n{% block lyranetwork_lyra_icon %}\n    <img class="lyranetwork-lyra-icon" :src="\'lyranetworklyra/images/lyra_icon.png\' | asset" alt="Lyra Collect payment plugin icon">\n{% endblock %}'});t("0nJl");var a=Shopware,i=a.Component,o=a.Mixin,r=Shopware.Context.app.config.version;i.register("lyranetwork-lyra-settings",{template:'\n\n{% block lyranetwork_lyra %}\n    <sw-page class="lyranetwork-lyra">\n        {% block lyranetwork_lyra_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="small-arrow-medium-right" small></sw-icon>\n                    {{ $tc(\'lyraTitle\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block lyranetwork_lyra_config_actions %}\n            <template #smart-bar-actions>\n                {% block lyranetwork_lyra_config_actions_doc %}\n                    <sw-button\n                            @click="isdocModalOpen = true"\n                            :disabled="false"\n                            variant="ghost"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false">\n                        {{ $tc(\'lyraDoc\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block lyranetwork_lyra_config_actions_abort %}\n                    <sw-button :routerLink="{ name: \'sw.plugin.index\' }">\n                        {{ $tc(\'cancel\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block lyranetwork_lyra_config_actions_save %}\n                    <sw-button variant="primary" class="lyranetwork-lyra-config__save-action" @click.prevent="onSave">\n                        {{ $tc(\'save\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block lyranetwork_lyra_config_content %}\n            <template #content>\n                <sw-modal\n                v-if="isdocModalOpen"\n                @modal-close="isdocModalOpen = false"\n                :title="$tc(\'lyraDoc\')"\n                class="lyra-doc sw-modal--small">\n                    <sw-container columns="1fr">\n                        <div class="lyra-doc__col">\n                            <div class="lyra-doc__icon">\n                                <img class="lyra-doc__lyra-icon" :src="\'lyranetworklyra/images/lyra_logo.png\' | asset" alt="Lyra Collect payment plugin logo">\n                            </div>\n                            <p class="lyra-doc__desc">\n                                {{ $tc(\'lyraDescription\') }}\n                            </p>\n\n                            <p class="lyra-doc__docdesc">\n                                {{ $tc(\'lyraDocumentationDescription\') }}\n                            </p>\n\n                            <sw-dashboard-external-link\n                                v-for="docFile in docFiles"\n                                :name="docFile.name"\n                                :title="docFile.title"\n                                :link="docFile.link">\n                            </sw-dashboard-external-link>\n                        </div>\n                    </sw-container>\n                </sw-modal>\n\n                <sw-card-view>\n                    <sw-system-config\n                            ref="systemConfig"\n                            salesChannelSwitchable\n                            inherit\n                            domain="LyranetworkLyra.config">\n                        <template #card-element="{ element, config }">\n                            <sw-form-field-renderer\n                            v-if="element.name.startsWith(\'LyranetworkLyra.config.lyraPaymentStatusOnSuccess\')"\n                            :config="{\n                                        componentName: \'sw-single-select\',\n                                        label: getElementLabel(element.name),\n                                        helpText: getElementHelptext(element.name),\n                                        options: paymentStatuses\n                                    }"\n                            v-model="config[element.name]"/>\n\n                            <sw-form-field-renderer\n                            v-else-if="element.name.startsWith(\'LyranetworkLyra.config.lyraLanguage\')"\n                            :config="{\n                                        componentName: \'sw-single-select\',\n                                        label: getElementLabel(element.name),\n                                        helpText: getElementHelptext(element.name),\n                                        options: languages\n                                    }"\n                            v-model="config[element.name]"/>\n\n                            <sw-form-field-renderer\n                            v-else-if="element.name.startsWith(\'LyranetworkLyra.config.lyraAvailableLanguages\')"\n                            :config="{\n                                        componentName: \'sw-multi-select\',\n                                        label: getElementLabel(element.name),\n                                        helpText: getElementHelptext(element.name),\n                                        options: languages\n                                    }"\n                            v-model="config[element.name]"/>\n\n                            <sw-form-field-renderer\n                            v-else-if="element.name.startsWith(\'LyranetworkLyra.config.lyraPaymentCards\')"\n                            :config="{\n                                        componentName: \'sw-multi-select\',\n                                        label: getElementLabel(element.name),\n                                        helpText: getElementHelptext(element.name),\n                                        options: cardTypes\n                                    }"\n                            v-model="config[element.name]"/>\n\n                            <sw-form-field-renderer\n                                v-else\n                                v-bind="getBind(element)"\n                                v-model="config[element.name]"\n                                :disabled="isDisabled(element)"\n                                v-show="isShown(element)">\n\n                            </sw-form-field-renderer>\n\n                        </template>\n                    </sw-system-config>\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}',mixins:[o.getByName("notification"),o.getByName("sw-inline-snippet")],inject:["LyranetworkLyraSettingsService"],data:function(){return{isSupportModalOpen:!1,paymentStatuses:[],languages:[],cardTypes:[],docFiles:[],isdocModalOpen:!1,qualif:!1,shatwo:!0,isFlow:!1}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this,n=this;this.LyranetworkLyraSettingsService.getFeatures().then((function(e){n.qualif=e.qualif,n.shatwo=e.shatwo})),this.LyranetworkLyraSettingsService.isFlow({shopwareVersion:r}).then((function(e){n.isFlow=e.isFlow})),this.LyranetworkLyraSettingsService.getDocFiles().then((function(e){e.data.forEach((function(e){n.docFiles.push({name:e.name,title:e.title,link:e.link})}))})),this.LyranetworkLyraSettingsService.getCardTypes().then((function(e){for(var t in e.data)e.data.hasOwnProperty(t)&&n.cardTypes.push({label:e.data[t],value:t})})),this.LyranetworkLyraSettingsService.getLanguages().then((function(t){for(var a in t.data)t.data.hasOwnProperty(a)&&n.languages.push({label:e.$tc("lyraLanguages."+a),value:a})})),this.LyranetworkLyraSettingsService.getPaymentStatuses().then((function(e){e.data.forEach((function(e){n.paymentStatuses.push({label:e.label,value:e.value})}))}))},getBind:function(e){return"single-select"==e.type&&(e.config.label=this.getElementLabel(e.name),"LyranetworkLyra.config.lyraSignAlgo"!==e.name||this.shatwo?e.config.helpText=this.getElementHelptext(e.name):e.config.helpText=this.getElementHelptext(e.name+"1")),e},getElementLabel:function(e){return this.$tc(e.replace("LyranetworkLyra.config.",""))},getElementHelptext:function(e){return this.$tc(e.replace("LyranetworkLyra.config.","")+"Helptext")},isDisabled:function(e){return e.name.startsWith("LyranetworkLyra.config.lyraCtxMode")&&this.qualif||e.name.startsWith("LyranetworkLyra.config.lyraOrderPlacedFlowEnabled")&&!this.isFlow},isShown:function(e){return(!e.name.startsWith("LyranetworkLyra.config.lyraKeyTest")||!this.qualif)&&(!e.name.startsWith("LyranetworkLyra.config.lyraOrderPlacedFlowEnabled")||this.isFlow)},onSave:function(){var e=this;this.$refs.systemConfig.saveAll().then((function(){e.createNotificationSuccess({title:e.$tc("titleSaveSuccess"),message:e.$tc("messageSaveSuccess")});var n=e.$refs.systemConfig.currentSalesChannelId;e.LyranetworkLyraSettingsService.setOrderPlacedFlow({salesChannelId:n,shopwareVersion:r})})).catch((function(n){e.createNotificationError({title:e.$tc("titleSaveError"),message:n});var t=e.$refs.systemConfig.currentSalesChannelId;e.LyranetworkLyraSettingsService.setOrderPlacedFlow({salesChannelId:t,shopwareVersion:r})}))}}});t("TD2K");var s=Shopware,l=s.Component;s.Mixin;l.override("sw-order-detail-base",{template:'\n\n{% block sw_order_detail_base_status_card %}\n    {% parent %}\n\n    <template v-if="!isLoading" :isLoading="isLoading">\n        <template v-if="hasLyraPayment(order)">\n            <sw-card class="sw-order-lyra-card" :title="$tc(\'lyraPaymentInformation\')">\n                <template v-for="transaction in order.transactions">\n                    <template v-if="isLyraPayment(transaction)">\n                        <sw-container columns="1fr 1fr">\n                            <sw-description-list>\n                                <dl>\n                                    <div>\n                                        <dt>{{ $tc(\'lyraTransactionId\') }}</dt>\n                                        <dd class="sw-order-base__label-sales-channel">{{ transaction.customFields.lyra_transaction_id }}</dd>\n                                    </div>\n                                    <div>\n                                        <dt>{{ $tc(\'lyraTransactionUuid\') }}</dt>\n                                        <dd class="sw-order-base__label-sales-channel">{{ transaction.customFields.lyra_transaction_uuid }}</dd>\n                                    </div>\n                                    <div>\n                                        <dt>{{ $tc(\'lyraTransactionType\') }}</dt>\n                                        <dd class="sw-order-base__label-sales-channel">{{ transaction.customFields.lyra_transaction_type }}</dd>\n                                    </div>\n                                </dl>\n                            </sw-description-list>\n                            <sw-description-list>\n                                <dl>\n                                    <div>\n                                        <dt>{{ $tc(\'lyraMeansOfPayment\') }}</dt>\n                                        <dd class="sw-order-base__label-sales-channel">{{ transaction.customFields.lyra_means_of_payment }}</dd>\n                                    </div>\n                                    <div>\n                                        <dt>{{ $tc(\'lyraCardNumber\') }}</dt>\n                                        <dd class="sw-order-base__label-sales-channel">{{ transaction.customFields.lyra_card_number }}</dd>\n                                    </div>\n                                    <div>\n                                        <dt>{{ $tc(\'lyraCardExpirationDate\') }}</dt>\n                                        <dd class="sw-order-base__label-sales-channel">{{ transaction.customFields.lyra_card_expiration_date }}</dd>\n                                    </div>\n                                </dl>\n                            </sw-description-list>\n                        </sw-container>\n                    </template>\n                </template>\n            </sw-card>\n        </template>\n    </template>\n{% endblock %}',methods:{isLyraPayment:function(e){return!!e.customFields&&e.customFields.lyra_transaction_id},hasLyraPayment:function(e){var n=this,t=!1;return!!e.transactions&&(e.transactions.map((function(e){n.isLyraPayment(e)&&(t=!0)})),t)}}});t("+WiG");Shopware.Component.override("sw-settings-index",{template:'\n\n{% block sw_settings_content_card_slot_plugins %}\n    {% parent %}\n\n    <sw-settings-item :label="$tc(\'lyraTitle\')"\n                      :to="{ name: \'lyranetwork.lyra.index\' }"\n                      :backgroundEnabled="false">\n        <template #icon>\n            <img class="sw-settings-index__lyra-icon" :src="\'lyranetworklyra/images/lyra_icon.png\' | asset" alt="Lyra Collect payment plugin icon">\n        </template>\n    </sw-settings-item>\n{% endblock %}'});t("P6Sy");var c={type:"plugin",name:"Lyra Collect",title:"lyraTitle",description:"lyraGeneral.descriptionTextModule",version:"3.0.3",icon:"default-action-settings",snippets:{"de-DE":t("AlIh"),"en-GB":t("1oRH"),"es-ES":t("ew8p"),"fr-FR":t("eZjQ")},routeMiddleware:function(e,n){e(n)},routes:{index:{component:"lyranetwork-lyra-settings",path:"index",meta:{parentPath:"sw.settings.index"}}},settingsItem:{name:"lyranetwork-lyra",to:"lyranetwork.lyra.index",label:"lyraTitle",group:"plugins",iconComponent:"lyranetwork-lyra-icon",backgroundEnabled:!1}};Shopware.Module.register("lyranetwork-lyra",c);t("HlN1")},eZjQ:function(e){e.exports=JSON.parse('{"lyraTitle":"Lyra Collect","lyraGeneral":{"mainMenuItemGeneral":"Lyra Collect","descriptionTextModule":"Paramètres Lyra Collect","menuEntry":"Configuration"},"lyraPaymentInformation":"Informations de paiement","lyraTransactionId":"ID de transaction","lyraTransactionUuid":"UUID de transaction","lyraTransactionType":"Type de transaction","lyraMeansOfPayment":"Moyen de paiement","lyraCardNumber":"Numéro de carte","lyraCardExpirationDate":"Date d\'expiration","lyraLanguages":{"fr":"Français","de":"Allemand","en":"Anglais","es":"Espagnol","zh":"Chinois","it":"Italien","ja":"Japonais","pt":"Portugais","nl":"Néerlandais","sv":"Suédois","ru":"Russe","pl":"Polonais","tr":"Turc"},"lyraDoc":"Documentation","save":"Save","cancel":"Cancel","titleSaveSuccess":"Succès","messageSaveSuccess":"Configuration sauvegardée avec succès","titleSaveError":"Erreur","lyraDescription":"Ce plugin vous permet de configurer le système de paiement Lyra Collect sur votre site Web Shopware.","lyraDocumentationDescription":"Cliquer pour accéder à la documentation de configuration du module:","lyraCtxMode":"Mode","lyraCtxModeHelptext":"Mode de fonctionnement du module.","lyraSignAlgo":"Algorithme de signature","lyraSignAlgoHelptext":"Algorithme utilisé pour calculer la signature du formulaire de paiement. L\'algorithme sélectionné doit être le même que celui configuré sur le Back Office Lyra Collect.","lyraSignAlgo1Helptext":"Algorithme utilisé pour calculer la signature du formulaire de paiement. L\'algorithme sélectionné doit être le même que celui configuré sur le Back Office Lyra Collect. Le HMAC-SHA-256 ne doit pas être activé si celui-ci n\'est pas encore disponible depuis le Back Office Lyra Collect, la fonctionnalité sera disponible prochainement.","lyraLanguage":"Langue par défaut","lyraLanguageHelptext":"Sélectionner la langue par défaut à utiliser sur la page de paiement.","lyraAvailableLanguages":"Langues disponibles","lyraAvailableLanguagesHelptext":"Sélectionner les langues à proposer sur la page de paiement. Ne rien sélectionner pour utiliser la configuration de la plateforme.","lyraValidationMode":"Mode de validation","lyraValidationModeHelptext":"En mode manuel, vous devrez confirmer les paiements dans le Back Office Lyra Collect.","lyraPaymentCards":"Types de carte","lyraPaymentCardsHelptext":"Le(s) type(s) de carte pouvant être utilisé(s) pour le paiement. Ne rien sélectionner pour utiliser la configuration de la plateforme.","lyraReturnMode":"Mode de retour","lyraReturnModeHelptext":"Façon dont l\'acheteur transmettra le résultat du paiement lors de son retour à la boutique.","lyraPaymentStatusOnSuccess":"Statut de paiement de la commande","lyraPaymentStatusOnSuccessHelptext":"Définir le statut de paiement des commandes payées par ce mode de paiement.","lyraOrderPlacedFlowEnabled":"Flux Order placed","lyraOrderPlacedFlowEnabledHelptext":"Si activé, le flux « Order placed » sera activé. Attention: La désactivation de cette option va désactiver toutes les actions définies dans le flux « Order placed ». Le flux sera désactivé pour tous les autres plugins et applications."}')},ew8p:function(e){e.exports=JSON.parse('{"lyraTitle":"Lyra Collect","lyraGeneral":{"mainMenuItemGeneral":"Lyra Collect","descriptionTextModule":"Configuración de Lyra Collect","menuEntry":"Configuración"},"lyraPaymentInformation":"Información del pago","lyraTransactionId":"ID de transacción","lyraTransactionUuid":"UUID de transacción","lyraTransactionType":"Tipo de transacción","lyraMeansOfPayment":"Medio de pago","lyraCardNumber":"Número de tarjeta","lyraCardExpirationDate":"Fecha de expiración","lyraLanguages":{"fr":"Francés","de":"Alemán","en":"Inglés","es":"Español","zh":"Chino","it":"Italiano","ja":"Japonés","pt":"Portugués","nl":"Holandés","sv":"Sueco","ru":"Ruso","pl":"Polaco","tr":"Turco"},"lyraDoc":"Documentación","save":"Save","cancel":"Cancel","titleSaveSuccess":"Éxito","messageSaveSuccess":"Configuración guardada con éxito","titleSaveError":"Error","lyraDescription":"Este plugin le permite configurar el sistema de pago Lyra Collect en su sitio web Shopware.","lyraDocumentationDescription":"Haga clic para ver la documentación de la configuración del módulo:","lyraCtxMode":"Modo","lyraCtxModeHelptext":"El modo de contexto de este módulo.","lyraSignAlgo":"Algoritmo de firma","lyraSignAlgoHelptext":"a calcular la firma del formulario de pago. El algoritmo seleccionado debe ser el mismo que el configurado en el Back Office Lyra Collect.","lyraSignAlgo1Helptext":"Algoritmo usado para calcular la firma del formulario de pago. El algoritmo seleccionado debe ser el mismo que el configurado en el Back Office Lyra Collect. El algoritmo HMAC-SHA-256 no se debe activar si aún no está disponible el Back Office Lyra Collect, la función estará disponible pronto.","lyraLanguage":"Idioma por defecto","lyraLanguageHelptext":"Idioma por defecto en la página de pago.","lyraAvailableLanguages":"Idiomas disponibles","lyraAvailableLanguagesHelptext":"Idiomas disponibles en la página de pago. Si no selecciona ninguno, todos los idiomas compatibles estarán disponibles.","lyraValidationMode":"Modo de validación","lyraValidationModeHelptext":"Si se selecciona manual, deberá confirmar los pagos manualmente en su Back Office Lyra Collect.","lyraPaymentCards":"Tipos de tarjeta","lyraPaymentCardsHelptext":"El tipo(s) de tarjeta que se puede usar para el pago. No haga ninguna selección para usar la configuración del portal.","lyraReturnMode":"Modo de retorno","lyraReturnModeHelptext":"Método que se usará para transmitir el resultado del pago de la página de pago a su tienda.","lyraPaymentStatusOnSuccess":"Estado de pago del pedido","lyraPaymentStatusOnSuccessHelptext":"Define el estado de pago de los pedidos pagados con este modo de pago.","lyraOrderPlacedFlowEnabled":"Flujo Order placed","lyraOrderPlacedFlowEnabledHelptext":"Si está habilitado, el flujo « Order placed » se activará. Advertencia: Al deshabilitar esta opción, se deshabilitarán todas las acciones definidas en el flujo « Order placed ». El flujo se desactivará para todos los demás complementos y aplicaciones."}')},nRpd:function(e,n,t){var a=t("8HQ4");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("25bae4da",a,!0,{})}});
//# sourceMappingURL=lyranetwork-lyra.js.map